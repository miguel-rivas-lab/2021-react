{"version":3,"sources":["components/row.tsx","components/column.tsx","components/icon.tsx","components/btn.tsx","redux/theme.ts","redux/panel.tsx","redux/model.tsx","components/panel-navigation.tsx","views/home-workarea.jsx","components/scroll-area.tsx","redux/home.tsx","views/home-panel.jsx","app.tsx","reportWebVitals.ts","redux/users.tsx","modules/db.js","redux/store.ts","modules/firebase.ts","index.tsx"],"names":["Row","children","addClass","tableElement","group","integrate","spacing","breakpoint","vertical","computedClasses","classNames","validateSpacing","computedRole","className","role","defaultProps","squareTag","Column","size","mode","validateSize","Icon","glyph","computedIcon","undefined","Btn","value","color","icon","onClick","href","to","tag","active","themeSlice","createSlice","name","initialState","theme","reducers","toggleTheme","state","setTheme","action","payload","actions","panelVisibilitySlice","panelVisibility","togglePanelVisibility","setPanelVisibility","setCurrentModelSlice","currentModel","setCurrentModel","playSound","context","AudioContext","newSound","createOscillator","newGain","createGain","connect","frequency","destination","start","gain","exponentialRampToValueAtTime","currentTime","Navigation","props","dispatch","useDispatch","result","geometry","forEach","item","index","isActive","model","push","PanelNavigation","useSelector","themeBtnClasses","Model","useRef","useGLTF","path","nodes","materials","ref","dispose","polySurface","material","lambert1","position","rotation","Math","PI","scale","Scene","states","scene","useFrame","pause","current","y","x","z","OrbitControls","intensity","castShadow","fallback","args","HomeWorkarea","home","users","cover","middleName","lastName","title","ScrollArea","homeSlice","setValue","axis","toggleValue","NumberInput","label","increment","HomePanel","App","appClasses","base","basename","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","usersSlice","setUsers","configureStore","reducer","themeReducer","panelVisibilityReducer","usersReducer","homeReducer","currentReducer","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.0b9e5fc1.chunk.js","sourcesContent":["import { ReactElement, ReactNode } from \"react\";\nimport { validateSpacing } from \"nano-grid/modules/columns-manager\";\nimport classNames from 'classnames';\nimport { breakpointsType } from \"../types/breakpoints\";\nimport { spacingType } from \"../types/spacing\";\n\ntype RowProps = {\n  children?: ReactNode,\n  addClass?: string,\n  breakpoint?: breakpointsType,\n  tableElement: boolean,\n  group: boolean,\n  integrate: boolean,\n  spacing: spacingType,\n  vertical: boolean,\n}\n\nfunction Row({ children, addClass, tableElement, group, integrate, spacing, breakpoint, vertical }: RowProps): ReactElement {\n  const computedClasses = classNames(\n    \"nano-row\",\n    addClass,\n    breakpoint,\n    validateSpacing(spacing),\n    vertical ? 'vertical' : 'horizontal',\n    {\n      'nano-group': group,\n      'integrate': integrate,\n    },\n  );\n  const computedRole = classNames({\n    \"row\": tableElement,\n    \"group\": group,\n  });\n  return (\n    <div\n      className={computedClasses}\n      role={computedRole}>\n      {children}\n    </div>\n  );\n}\n\nRow.defaultProps = {\n  tableElement: false,\n  vertical: false,\n  group: false,\n  integrate: false,\n  squareTag: false,\n  spacing: 0,\n}\n\nexport default Row;","import { ReactElement, ReactNode } from \"react\";\nimport { validateSize } from \"nano-grid/modules/columns-manager\";\nimport classNames from 'classnames';\nimport { modalityType } from \"../types/modality\"\n\ntype ColumnProps = {\n  children?: ReactNode,\n  size: string,\n  mode: modalityType,\n  addClass?: string,\n  tableElement: boolean,\n}\n\nfunction Column({ children, size, mode, addClass, tableElement }: ColumnProps): ReactElement {\n  const computedClasses = classNames(mode, addClass, validateSize(size));\n  const computedRole = classNames({ \"cell\": tableElement });\n  return (\n    <div className={computedClasses} role={computedRole}>\n      {children}\n    </div>\n  );\n}\n\nColumn.defaultProps = {\n  mode: \"column\",\n  tableElement: false,\n  size: \"100%\"\n}\n\nexport default Column;","import { ReactElement } from \"react\";\n\ntype IconProps = {\n  glyph?: string,\n}\n\nfunction Icon({ glyph }: IconProps): ReactElement {\n  const computedIcon = glyph ? `mdi mdi-${glyph}` : undefined;\n  return (\n    <span className={computedIcon} />\n  );\n}\n\nexport default Icon;","import { ReactElement, ReactNode } from \"react\";\nimport classNames from 'classnames';\nimport Icon from './icon';\nimport { Link } from 'react-router-dom';\nimport { colorsType } from '../types/colors';\n\ntype BtnProps = {\n  children?: ReactNode,\n  addClass?: string,\n  size?: \"md\",\n  icon?: string,\n  onClick?: () => void,\n  href?: string,\n  to?: string,\n  tag: \"a\" | \"button\" | \"link\",\n  active: boolean,\n  value?: string | number,\n  color?: colorsType,\n}\n\nfunction Btn({ children, addClass, value, color, size, icon, onClick, href, to, tag, active }: BtnProps): ReactElement {\n  const computedClasses = classNames(\"flat\", \"btn\", \"icon\", size, addClass, color, { active: active });\n  if (tag === \"button\") {\n    return (\n      <button onClick={onClick} className={computedClasses}>\n        {icon && <Icon glyph={icon} />}\n        {children}\n        {value}\n      </button>\n    );\n  } else if (tag === \"a\") {\n    return (\n      <a href={href} className={computedClasses}>\n        {icon && <Icon glyph={icon} />}\n        {children}\n        {value}\n      </a>\n    );\n  } else if (tag === \"link\") {\n    return (\n      <Link to={to} className={computedClasses}>\n        {icon && <Icon glyph={icon} />}\n        {children}\n        {value}\n      </Link>\n    );\n  }\n\n}\n\nBtn.defaultProps = {\n  color: \"gravel\",\n  size: \"md\",\n  tag: \"button\",\n  active: false,\n}\n\nexport default Btn;","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const themeSlice = createSlice({\n  name: \"theme\",\n  initialState: {\n    theme: false\n  },\n  reducers: {\n    toggleTheme: (state) => {\n      state.theme = !state.theme;\n    },\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n    }\n  }\n});\n\nexport const { toggleTheme, setTheme } = themeSlice.actions;\n\nexport default themeSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const panelVisibilitySlice = createSlice({\n  name: \"panelVisibility\",\n  initialState: {\n    panelVisibility: true,\n  },\n  reducers: {\n    togglePanelVisibility: (state) => {\n      state.panelVisibility = !state.panelVisibility;\n    },\n    setPanelVisibility: (state, action) => {\n      state.panelVisibility = action.payload;\n    }\n  }\n});\n\nexport const { togglePanelVisibility, setPanelVisibility } = panelVisibilitySlice.actions;\n\nexport default panelVisibilitySlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const setCurrentModelSlice = createSlice({\n  name: \"currentModel\",\n  initialState: {\n    currentModel: 'xwing',\n  },\n  reducers: {\n    setCurrentModel: (state, action) => {\n      state.currentModel = action.payload;\n    }\n  }\n});\n\nexport const { setCurrentModel } = setCurrentModelSlice.actions;\n\nexport default setCurrentModelSlice.reducer;","import { ReactElement } from \"react\";\nimport Row from './row';\nimport Column from './column';\nimport Btn from './btn';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from \"classnames\";\nimport { toggleTheme } from '../redux/theme';\nimport { togglePanelVisibility } from \"../redux/panel\";\nimport { setCurrentModel } from \"../redux/model\";\n\nfunction playSound() {\n  let context = new AudioContext();\n  let newSound = context.createOscillator();\n  let newGain = context.createGain();\n  newSound.connect(newGain);\n  newSound.frequency.value = 300;\n  newGain.connect(context.destination);\n  newSound.start(0);\n  newGain.gain.exponentialRampToValueAtTime(\n    0.00000001,\n    context.currentTime + 0.5\n  );\n};\n\nfunction Navigation(props): ReactElement {\n  const dispatch = useDispatch();\n  const navigationRoutes = [\n    { icon: \"rocket-launch\", geometry: \"xwing\", },\n    { icon: \"car\", geometry: \"car\", },\n    { icon: \"briefcase\", geometry: \"backpack\", },\n    { icon: \"chair-school\", geometry: \"chair\", },\n    // { icon: \"sail-boat\", geometry: \"drakkar\", },\n    // { icon: \"monster\", geometry: \"taza\", },\n    // { icon: \"monster\", geometry: \"umbrella\", },\n    // { icon: \"monster\", path: \"caballo\", },\n    // { icon: \"monster\", path: \"llave\", },\n    // { icon: \"monster\", path: \"macbook\", },\n    // { icon: \"monster\", path: \"plane\", },\n  ];\n  const result = [];\n  navigationRoutes.forEach((item, index) => {\n    const isActive = props.model === item.geometry;\n    result.push(\n      <Btn\n        key={`nav-${index}`}\n        onClick={() => {\n          dispatch(setCurrentModel(item.geometry));\n          if(isActive){\n            dispatch(togglePanelVisibility());\n            playSound();\n          }\n        }}\n        active={isActive}\n        icon={item.icon}\n      />\n    );\n  });\n  return <>{result}</>;\n}\n\nfunction PanelNavigation(): ReactElement {\n  const dispatch = useDispatch();\n  const { theme } = useSelector((state: any) => state.theme);\n  const { currentModel } = useSelector((state: any) => state.currentModel);\n  const themeBtnClasses = classNames(\n    { \"active\": !theme }\n  );\n\n  return (\n    <Column size=\"50\" addClass=\"main-panel\">\n      <div className=\"container\">\n        <Row vertical={true}>\n          <Column size=\",100%-35\">\n            <Navigation model={currentModel} />\n          </Column>\n          <Column mode=\"suffix\" size=\",35\">\n            <Btn\n              onClick={() => {\n                dispatch(toggleTheme());\n                playSound();\n              }}\n              icon=\"brightness-4\"\n              color=\"charcoal\"\n              addClass={themeBtnClasses}\n            />\n          </Column>\n        </Row>\n      </div>\n    </Column>\n  );\n}\n\nexport default PanelNavigation;","import { useRef, Suspense } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { OrbitControls, useGLTF } from \"@react-three/drei\";\n\nfunction Model(props) {\n  const group = useRef();\n  const { nodes, materials } = useGLTF(`3d/${props.path}.glb`);\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.polySurface.geometry}\n        material={materials.lambert1}\n        position={[0, 0, 1]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={props.scale}\n      />\n    </group>\n  );\n};\n\nfunction Scene({ states, currentModel }) {\n  const scene = useRef();\n  \n  useFrame(() => {\n    if (!states.pause) {\n      scene.current.rotation.y += states.y * 0.01;\n      scene.current.rotation.x += states.x * 0.01;\n      scene.current.rotation.z += states.z * 0.01;\n    }\n  });\n  return (\n    <scene ref={scene} rotation={[Math.PI / 8, 0, 0]}>\n      <OrbitControls />\n      <ambientLight\n        color=\"#404040\"\n        intensity={1}\n      />\n      <directionalLight\n        color=\"#fff\"\n        intensity={2}\n        castShadow\n        position={[0, 1, 0]}\n      />\n      <pointLight\n        color=\"#c4c4c4\"\n        intensity={1}\n        position={[0, 300, 500]}\n      />\n      <pointLight\n        color=\"#c4c4c4\"\n        intensity={1}\n        position={[500, 100, 0]}\n      />\n      <pointLight\n        color=\"#c4c4c4\"\n        intensity={1}\n        position={[0, 100, -500]}\n      />\n      <pointLight\n        color=\"#c4c4c4\"\n        intensity={1}\n        position={[-540, 300, 0]}\n      />\n      <Suspense fallback={null}>\n        <Model path={currentModel} scale={0.7} />\n      </Suspense>\n      <gridHelper args={[60, 25]} position={[0, 0, 0]} />\n    </scene>\n  );\n};\n\nfunction HomeWorkarea() {\n  const { home } = useSelector((state) => state.home);\n  const { users } = useSelector((state) => state.users);\n  const { currentModel } = useSelector((state) => state.currentModel);\n  return (\n    <>\n      <Canvas className=\"three-scene\">\n        <Scene states={home} currentModel={currentModel} />\n      </Canvas>\n      {home.cover && <>\n        <div className=\"cover\">\n          {users &&\n            <>\n              <h1>\n                {users.middleName} {users.lastName}\n              </h1>\n              <h2>\n                {users.title}\n              </h2>\n            </>\n          }\n        </div>\n      </>\n\n      }\n\n    </>\n  );\n};\n\nexport default HomeWorkarea;","import { ReactElement, ReactNode } from \"react\";\nimport classNames from 'classnames';\nimport { colorsType } from '../types/colors';\n\ntype ScrollAreaProps = {\n  children?: ReactNode,\n  color?: colorsType,\n  addClass?: String,\n}\n\nfunction ScrollArea({ children, color, addClass}: ScrollAreaProps): ReactElement {\n  const computedClasses = classNames(color, addClass, \"scroll-area\");\n  return (\n    <div className={computedClasses}>\n      {children}\n    </div>\n  );\n}\n\nScrollArea.defaultProps = {\n  color: \"royal-purple\",\n}\n\nexport default ScrollArea;","import { createSlice } from \"@reduxjs/toolkit\";\n\ntype booleanProps = {\n  payload: \"cover\" | \"pause\"\n};\n\ntype axis = {\n  payload: {\n    axis: \"x\" | \"y\" | \"z\",\n    value: number\n  }  \n};\n\nexport const homeSlice = createSlice({\n  name: \"home\",\n  initialState: {\n    home: {\n      x: 0,\n      y: 1,\n      z: 0,\n      cover: true,\n      pause: false,\n    }\n  },\n  reducers: {\n    setValue: (state, action:axis) => {\n      state.home[action.payload.axis] = action.payload.value;\n    },\n    toggleValue: (state, action: booleanProps) => {\n      state.home[action.payload] = !state.home[action.payload] ;\n    },\n  }\n});\n\nexport const { setValue, toggleValue } = homeSlice.actions;\n\nexport default homeSlice.reducer;","import { useSelector, useDispatch } from 'react-redux';\nimport Btn from \"../components/btn\";\nimport Column from \"../components/column\";\nimport Row from \"../components/row\";\nimport ScrollArea from '../components/scroll-area';\nimport { setValue, toggleValue } from \"../redux/home\";\n\nfunction NumberInput({ label, value = 0, increment = 1, axis }) {\n  const dispatch = useDispatch();\n  return (\n    <Row>\n      <Column>\n        <label>{label}</label>\n      </Column>\n      <Column>\n        <Row group>\n          <Column mode=\"prefix\" size=\"35\">\n            <Btn icon=\"minus\" onClick={() => {\n              value -= increment;\n              dispatch(setValue({ value: value, axis: axis }));\n            }} />\n          </Column>\n          <Column size=\"100%-35*2\">\n            <p className=\"input-label\">{value}</p>\n          </Column>\n          <Column mode=\"suffix\" size=\"35\">\n            <Btn icon=\"plus\" onClick={() => {\n              value += increment;\n              dispatch(setValue({ value: value, axis: axis }));\n            }} />\n          </Column>\n        </Row>\n      </Column>\n    </Row>\n  );\n}\n\nfunction HomePanel() {\n  const { home } = useSelector((state) => state.home);\n  const dispatch = useDispatch();\n  return (\n    <ScrollArea color=\"royal-purple\">\n      <fieldset className=\"nano-row row-block horizontal\">\n        <Column>\n          <legend>Animation Controllers</legend>\n\n          <Row>\n            <Column>\n            <Btn\n              active={home.cover}\n              color=\"charcoal\"\n              value=\"Cover\"\n              onClick={()=> {\n                dispatch(toggleValue(\"cover\"));\n              }}\n            />\n            </Column>\n          </Row>\n\n          <Row>\n            <Column>\n              <Btn\n                active={home.pause}\n                color=\"charcoal\"\n                value=\"Pause\"\n                onClick={()=> {\n                  dispatch(toggleValue(\"pause\"));\n                }}\n              />\n            </Column>\n          </Row>\n\n          <NumberInput label=\"X Rotation\" value={home.x} axis=\"x\" />\n          <NumberInput label=\"Y Rotation\" value={home.y} axis=\"y\" />\n          <NumberInput label=\"Z Rotation\" value={home.z} axis=\"z\" />\n        </Column>\n      </fieldset>\n    </ScrollArea>\n  );\n}\n\nexport default HomePanel;","import React from 'react';\nimport Row from './components/row';\nimport Column from './components/column';\nimport PanelNavigation from './components/panel-navigation';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport classNames from \"classnames\";\n// ---------- Views\nimport HomeWorkarea from './views/home-workarea.jsx';\nimport HomePanel from './views/home-panel.jsx';\n\nfunction App() {\n  const { panelVisibility } = useSelector((state: any) => state.panelVisibility);\n  const { theme } = useSelector((state: any) => state.theme);\n  const appClasses = classNames(\"react-theme\", \"section-home\", {\n    \"nano-dark\": !theme,\n    \"nano-light\": theme,\n  });\n\n  let base = \"/\";\n  if(process.env.NODE_ENV === 'production'){\n    base = \"/2021-react/\";\n  }\n\n  return (\n    <Router basename={base}>\n      <main className={appClasses}>\n        <Row addClass=\"nano-app\">\n          <PanelNavigation />\n          <Column size=\"350\" addClass={classNames(\"panel\", \"router-area\", { 'hide-panel': !panelVisibility })}>\n            <Switch>\n              <Route exact path=\"/\">\n                <HomePanel />\n              </Route>\n            </Switch>\n          </Column>\n          <Column size={panelVisibility ? '100%-350' : '100%-50'} addClass=\"workarea\">\n            <Switch>\n              <Route exact path=\"/\">\n                <HomeWorkarea />\n              </Route>\n            </Switch>\n          </Column>\n        </Row>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {users} from '../modules/db.js';\n\nexport const usersSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    users: users\n  },\n  reducers: {\n    setUsers: (state, action) => {\n      state.users = action.payload;\n    }\n  }\n});\n\nexport const { setUsers } = usersSlice.actions;\n\nexport default usersSlice.reducer;","const users = {\n  \"name\": \"Jesus\",\n  \"middleName\": \"Miguel\",\n  \"lastName\": \"Rivas\",\n  \"title\": \"Frontend Developer\",\n  \"website\": \"miguel-rivas.github.io\",\n  \"location\": {\n    \"city\": \"Washington\",\n    \"state\": \"DC\"\n  },\n  \"media\": {\n    \"codepen\": {\n      \"user\": \"planetwurlex\"\n    },\n    \"issuu\": {\n      \"user\": \"jemiguelrivas\"\n    },\n    \"linkedin\": {\n      \"user\": \"jemiguelrivas\"\n    },\n    \"github\": {\n      \"user\": \"jemiguelrivas\",\n      \"development\": \"miguel-rivas-lab\",\n      \"production\": \"miguel-rivas\"\n    }\n  }\n};\n\nexport {users};","import { configureStore } from \"@reduxjs/toolkit\";\nimport themeReducer from \"./theme\";\nimport panelVisibilityReducer from \"./panel\";\nimport usersReducer from \"./users\";\nimport homeReducer from \"./home\";\nimport currentReducer from \"./model\";\n\nexport default configureStore({\n  reducer: {\n    theme: themeReducer,\n    panelVisibility: panelVisibilityReducer,\n    users: usersReducer,\n    home: homeReducer,\n    currentModel: currentReducer,\n  }\n});","import { initializeApp } from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBQL-s1Nx5E1RSmKO-SaVGGUEM4_rYKOAs\",\n  authDomain: \"portfolio-e08b9.firebaseapp.com\",\n  projectId: \"portfolio-e08b9\",\n  storageBucket: \"portfolio-e08b9.appspot.com\",\n  messagingSenderId: \"242330667069\",\n  appId: \"1:242330667069:web:702aaf351232c301558254\",\n  measurementId: \"G-QTX08NPNKV\"\n};\n\nexport const firebaseApp = initializeApp(firebaseConfig);","import ReactDOM from 'react-dom';\nimport { StrictMode } from \"react\";\nimport App from './app';\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from './reportWebVitals';\nimport './stylesheets/application.scss';\nimport store from './redux/store';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/analytics';\nimport { firebaseApp } from \"./modules/firebase\";\nfirebase.analytics(firebaseApp);\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}